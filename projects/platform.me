/*
    build/linux-arm-debug/platform.me -- MakeMe Embedthis GoAhead for linux-arm-debug
 */

Me.load({
    main: "${TOP}/main.me",
    platform: {
        name: "linux-arm-debug",
        os: "linux",
        arch: "arm",
        like: "unix",
        dist: "ubuntu",
        profile: "debug",
        dev: "linux-x64-debug",
        cross: true,
        "arch-map": {
            x86: "i686",
            x64: "x86_64",
        },
    },
    dir: {
        top: "/media/vr-bsp/vr-bsp-home/gaojie/go",
        me: "/usr/local/lib/makeme/0.10.7/bin",
        work: "/media/vr-bsp/vr-bsp-home/gaojie/go",
        paks: "/media/vr-bsp/vr-bsp-home/gaojie/go/paks",
        bld: "/media/vr-bsp/vr-bsp-home/gaojie/go/build",
        out: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug",
        bin: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/bin",
        inc: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/inc",
        lbin: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-x64-debug/bin",
        lib: "/media/vr-bsp/vr-bsp-home/gaojie/go/src",
        obj: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/obj",
        src: "/media/vr-bsp/vr-bsp-home/gaojie/go/src",
        proj: "/media/vr-bsp/vr-bsp-home/gaojie/go/projects",
        pkg: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/pkg",
        rel: "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/img",
    },
    prefixes: {
        root: "/",
        base: "${prefixes.root}/usr/local",
        data: "${prefixes.root}",
        state: "${prefixes.root}/var",
        app: "${prefixes.base}/lib/goahead",
        vapp: "${prefixes.app}/4.0.1",
        bin: "${prefixes.base}/bin",
        inc: "${prefixes.base}/include",
        lib: "${prefixes.base}/lib",
        man: "${prefixes.base}/share/man",
        sbin: "${prefixes.base}/sbin",
        etc: "${prefixes.data}/etc/goahead",
        web: "${prefixes.state}/www/goahead",
        log: "${prefixes.state}/log/goahead",
        spool: "${prefixes.state}/spool/goahead",
        cache: "${prefixes.state}/spool/goahead/cache",
        src: "goahead-4.0.1",
    },
    settings: {
        author: "Embedthis Software",
        certs: {
            days: 3650,
            bits: 2048,
            gendh: true,
        },
        company: "embedthis",
        compatible: "4.0",
        compiler: {
            fortify: true,
            hasAtomic: true,
            hasAtomic64: true,
            hasDoubleBraces: false,
            hasDynLoad: true,
            hasLibEdit: false,
            hasLibRt: true,
            hasMmu: true,
            hasMtune: false,
            hasPam: false,
            hasStackProtector: true,
            hasSync: true,
            hasSync64: true,
            hasSyncCas: true,
            hasUnnamedUnions: true,
            warnUnused: true,
            warn64to32: false,
        },
        configure: "me configure --platform linux-arm",
        configured: true,
        debug: true,
        description: "Embedthis GoAhead Embedded Web Server",
        goahead: {
            accessLog: false,
            auth: true,
            authStore: "file",
            autoLogin: false,
            clientCache: [
                "css",
                "gif",
                "ico",
                "jpg",
                "js",
                "png",
            ],
            clientCacheLifespan: 86400,
            cgi: true,
            cgiVarPrefix: "CGI_",
            digest: true,
            documents: "web",
            javascript: true,
            legacy: false,
            limitBuffer: 1024,
            limitCgiArgs: 4096,
            limitFiles: 0,
            limitFilename: 256,
            limitHeader: 2048,
            limitHeaders: 4096,
            limitNumHeaders: 64,
            limitParseTimeout: 5,
            limitPassword: 32,
            limitPost: 16384,
            limitPut: 204800000,
            limitSessionLife: 1800,
            limitSessionCount: 512,
            limitString: 256,
            limitTimeout: 60,
            limitUri: 2048,
            limitUpload: 204800000,
            listen: [
                "http://*:80",
                "https://*:443",
            ],
            logging: true,
            logfile: "stderr:0",
            tracing: true,
            putDir: ".",
            realm: "example.com",
            replaceMalloc: false,
            stealth: true,
            ssl: {
                authority: "",
                cache: 512,
                certificate: "self.crt",
                ciphers: "",
                key: "self.key",
                logLevel: 5,
                handshakes: 1,
                revoke: "",
                ticket: true,
                timeout: 86400,
                verifyIssuer: false,
                verifyPeer: false,
            },
            upload: true,
            uploadDir: "tmp",
            xframeHeader: "SAMEORIGIN",
        },
        integrate: true,
        manifest: "installs/manifest.me",
        mbedtls: {
            compact: true,
        },
        name: "goahead",
        prefixes: "install-prefixes",
        rom: false,
        romTime: 1505449519432,
        title: "Embedthis GoAhead",
        version: "4.0.1",
    },
    targets: {
        compiler: {
            compiler: [
                "-Wno-unused-result",
                "-Wall",
                "-g",
                "-fPIC",
                "-fstack-protector",
                "--param=ssp-buffer-size=4",
                "-Wformat",
                "-Wformat-security",
                "-Wl,-z,relro,-z,now",
                "-Wl,--as-needed",
                "-Wl,--no-copy-dt-needed-entries",
                "-Wl,-z,noexecstatck",
                "-Wl,-z,noexecheap",
                "-fomit-frame-pointer",
            ],
            configurable: true,
            defines: [
                "ME_DEBUG=1",
                "_REENTRANT",
                "PIC",
            ],
            depends: [],
            description: "C/C++ Compiler",
            diagnostic: "Pre-loaded component",
            discovers: [
                "vxworks",
            ],
            enable: true,
            files: [],
            goals: [
                "compiler",
            ],
            home: "/usr/local/lib/makeme/0.10.7/bin/paks/me-components",
            includes: [
                "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/inc",
            ],
            libpaths: [
                "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/bin",
                "/media/vr-bsp/vr-bsp-home/gaojie/go/build/linux-arm-debug/bin",
            ],
            libraries: [
                "rt",
                "dl",
                "pthread",
                "m",
            ],
            linker: [
                "-g",
                "-rdynamic",
                "-Wl,--enable-new-dtags",
                "-Wl,-rpath,$ORIGIN/",
            ],
            loaded: true,
            name: "compiler",
            origin: "/usr/local/lib/makeme/0.10.7/bin/paks/me-components",
            path: "arm-linux-gnueabihf-gcc",
            scripts: {
                config: [
                    {
                        home: "/usr/local/lib/makeme/0.10.7/bin/paks/me-components",
                        interpreter: "ejs",
                        script: "[function Function]",
                    },
                ],
            },
            topLevel: true,
            type: "component",
            uses: [],
            vars: {
            },
        },
        lib: {
            configurable: true,
            depends: [],
            description: "Library Archive Tool",
            diagnostic: "Pre-loaded component",
            enable: true,
            files: [],
            goals: [
                "lib",
            ],
            home: "/usr/local/lib/makeme/0.10.7/bin/paks/me-components",
            ifdef: [
                "compiler",
            ],
            loaded: true,
            name: "lib",
            origin: "/usr/local/lib/makeme/0.10.7/bin/paks/me-components",
            path: "arm-linux-gnueabihf-ar",
            scripts: {
            },
            topLevel: true,
            type: "component",
            uses: [],
            vars: {
            },
        },
        matrixssl: {
            bare: true,
            configurable: true,
            depends: [],
            diagnostic: "Using the \"mbedtls\" SSL provider instead.",
            enable: false,
            files: [],
            goals: [
                "component",
                "matrixssl",
            ],
            home: ".",
            name: "matrixssl",
            scripts: {
            },
            type: "component",
            uses: [],
            vars: {
            },
        },
        mbedtls: {
            configurable: true,
            conflicts: [
                "openssl",
                "matrixssl",
                "nanossl",
            ],
            defines: [
                "-D_FILE_OFFSET_BITS=64",
            ],
            depends: [
                "libgoahead-mbedtls",
            ],
            description: "MbedTLS Support",
            diagnostic: "Pre-loaded component",
            enable: true,
            files: [],
            goals: [
                "mbedtls",
            ],
            home: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/goahead-mbedtls",
            ifdef: [
                "ssl",
            ],
            loaded: true,
            location: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/goahead-mbedtls",
            name: "mbedtls",
            origin: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/goahead-mbedtls",
            scripts: {
            },
            topLevel: true,
            type: "component",
            uses: [],
            vars: {
            },
        },
        nanossl: {
            bare: true,
            configurable: true,
            depends: [],
            diagnostic: "Using the \"mbedtls\" SSL provider instead.",
            enable: false,
            files: [],
            goals: [
                "component",
                "nanossl",
            ],
            home: ".",
            name: "nanossl",
            scripts: {
            },
            type: "component",
            uses: [],
            vars: {
            },
        },
        openssl: {
            configurable: true,
            conflicts: [
                "est",
                "matrixssl",
                "nanossl",
            ],
            depends: [
                "libgoahead-openssl",
            ],
            description: "OpenSSL Support",
            diagnostic: "Using the \"mbedtls\" SSL provider instead.",
            enable: false,
            files: [],
            goals: [
                "openssl",
            ],
            home: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/goahead-openssl",
            ifdef: [
                "ssl",
            ],
            loaded: true,
            name: "openssl",
            origin: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/goahead-openssl",
            scripts: {
                config: [
                    {
                        home: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/goahead-openssl",
                        interpreter: "ejs",
                        script: "[function Function]",
                    },
                ],
            },
            topLevel: true,
            type: "component",
            uses: [],
            vars: {
            },
        },
        osdep: {
            configurable: true,
            depends: [
                "osdep.h",
            ],
            description: "O/S Dependent Layer",
            diagnostic: "Pre-loaded component",
            enable: true,
            files: [],
            goals: [
                "osdep",
            ],
            home: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/osdep",
            loaded: true,
            name: "osdep",
            origin: "/media/vr-bsp/vr-bsp-home/gaojie/go/src/osdep",
            scripts: {
            },
            topLevel: true,
            type: "component",
            uses: [],
            vars: {
            },
        },
        ssl: {
            configurable: true,
            defines: [
                "-D_FILE_OFFSET_BITS=64",
            ],
            depends: [],
            description: "Secure Socket Layer Interface (MbedTLS Support)",
            diagnostic: "Pre-loaded component",
            discovers: [
                "mbedtls",
                "openssl",
                "matrixssl",
                "nanossl",
            ],
            enable: true,
            files: [],
            goals: [
                "ssl",
            ],
            home: "/media/vr-bsp/vr-bsp-home/gaojie/go/paks/ssl",
            loaded: true,
            name: "ssl",
            origin: "/media/vr-bsp/vr-bsp-home/gaojie/go/paks/ssl",
            scripts: {
                config: [
                    {
                        home: "/media/vr-bsp/vr-bsp-home/gaojie/go/paks/ssl",
                        interpreter: "ejs",
                        script: "[function Function]",
                    },
                ],
                without: [
                    {
                        home: "/media/vr-bsp/vr-bsp-home/gaojie/go/paks/ssl",
                        interpreter: "ejs",
                        script: "[function Function]",
                    },
                ],
            },
            topLevel: true,
            type: "component",
            uses: [
                "mbedtls",
                "openssl",
                "matrixssl",
                "nanossl",
            ],
            vars: {
            },
            provider: "mbedtls",
        },
        vxworks: {
            bare: true,
            configurable: true,
            depends: [],
            diagnostic: "Cannot find definition for component: vxworks.me",
            enable: false,
            files: [],
            goals: [
                "component",
                "vxworks",
            ],
            home: ".",
            name: "vxworks",
            scripts: {
            },
            type: "component",
            uses: [],
            vars: {
            },
        },
        linker: {
            path: "arm-linux-gnueabihf-gcc",
            enable: true,
        },
    },
    env: {
    },
})
